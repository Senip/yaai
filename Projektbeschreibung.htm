<html><head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>SAM: Projekt – Softwarearchitekturen und 
  Middlewaretechnologien</title>
    <style type="text/css">
    table {
      border: 1px solid grey;
      empty-cells: show;
    border-collapse: collapse;
    }
    th {
      background: lightgrey;
    }
    td, th {
      border: 1px solid grey;
      padding: 4px;
    }
    </style>

</head>

<body bgcolor="#FFFFFF" text="#000000">

  <p style="float: right;">Stand: 27.02.2012</p>

  <h2>Projektbeschreibung</h2>

<p>Das Ziel des Projekts ist der Entwurf einer Architektur für ein Verteiltes 
System und die Einarbeitung in Middleware-Technologien für verteilte 
Systeme. Zu diesem Zweck ist ein verteiltes Spiel zu realisieren, an dem bis zu 
vier Spieler teilnehmen können. Das User Interface des Spiels und die 
Spielelogik werden zur Verfügung gestellt.  Implementiert werden muss ein 
koordinierter Start des Spiels über eine fehlertolerante 
Registrierungsserver-Architektur.  Weiters müssen nach dem Start des Spiels 
die Spielzüge der einzelnen Spieler untereinander ausgetauscht werden.</p>

<h2>Alcatraz - Spielbeschreibung</h2>

<p>Ziel des Spiels ist mit seinen vier Gefangenen von der Gefangeneninsel 
Alcatraz (unterer Rand des Spielfeldes) in ein Boot (oberer Rand
des Spielfeldes) zu entkommen. Dazu kann jeder Spieler reihum mit einem 
beliebigen Gefangenen entweder horizontal oder vertikal auf ein freies Feld 
ziehen, solange man nicht von einem Wärter gefangen wird. Bei jedem Zug 
zieht auch der Wärter, der sich in der Zeile des Feldes befindet, auf das 
der Gefangene gezogen ist. Dabei fährt der Wärter dieselbe Anzahl an 
Feldern, die auch der Gefangene gefahren ist,
in die Richtung des Gefangenen. Alle Gefangenen, die sich im Wege befinden, 
werden geschlagen und müssen erneut von unten beginnen. Wärter
können immer nur horizontal in Ihrer Reihe ziehen. Ein Gefangener darf nicht auf 
ein Feld ziehen, an dem er sich selbst schlagen würde.
Befindet sich ein Gefangener im roten dreieckigen Bereich, so darf er im 
nächsten Zug in das Boot steigen. Der erste Spieler, welcher alle
seine Gefangenen ins Boot bekommt, hat gewonnen.
</p>


<h2>Anforderungen</h2>

<p>Die Übung teilt sich in eine Server- und Client-Implementierung auf. Für den 
<b>Registrierungs-Server</b> ergeben sich folgende Aufgaben:

</p><ul>
  <li>Entwerfen und implementieren Sie auf Basis der theoretischen Grundlagen 
  der Lehrveranstaltung bzw. auch der Grundlagen aus Verteilte Systeme ein 
  ausfallsicheres Serversystem zur Realisierung eines koordinierten Spielstarts 
  (Registrierungsserver).</li>
  <li>Das Registrieren bzw. Starten von Spielen soll möglich sein, sobald 
  bzw. solange mindestens ein Registrierungsserver läuft.</li>
  <li>Wenn sich ein Spieler für ein Spiel registriert hat, soll er sich auch 
  wieder abmelden können, sofern das Spiel nicht bereits gestartet wurde.</li>
  <li>Der Ausfall eines Servers darf nicht zum Verlust bzw. Abbruch von 
  laufenden Spielregistrierungen führen.</li>
  <li>Um die Server im laufenden Betrieb miteinander zu synchronisieren, ist die 
  Verwendung von Spread vorgesehen.</li>
  <li>Achten Sie darauf, dass Sie in Ihrer Architektur keinen 
  Single-Point-of-Failure haben.</li>
</ul>

<p>Der <b>Spiele-Client</b> ist durch folgende Anforderungen spezifiziert:</p>

<ul>
  <li>Der Client muss in Interaktion mit dem Server einen koordinierten 
  Spielstart durchführen. Ein Spiel muss mit 2, 3 oder 4 Spielern spielbar 
  sein.</li>
  <li>Es muss möglich sein, dass die Spielernamen ausgetauscht werden 
  können, damit jeder Spieler die anderen kennt. Ein Spielername muss 
  innerhalb eines Spieles eindeutig sein.</li>
  <li>Während eines Spiels sollen die Spielzüge direkt zwischen den 
  Spiel-Clients ausgetauscht werden. Der Server darf im Spiel nicht mehr 
  involviert sein.</li>
  <li>Eine kurze Netzwerkunterbrechung (z.B. durch Ziehen des Netzwerkkabels) 
  darf nicht zu inkorrektem Verhalten oder Absturz bzw. Deadlock des Spiels 
  führen.  Nach Wiederherstellung der Verbindung soll weitergespielt 
  werden können.</li>
  <li>Zur Kommunikation zwischen Client und Registrierungsserver bzw. zwischen 
  den Clients untereinander ist eine RMI Technologie zu verwenden.</li>
</ul>

<h2>Technologien</h2>

<p>Zur Realisierung der Übungsaufgabe kann Java RMI, CORBA, .NET Remoting 
oder .NET WCF verwendet werden.<!--, wobei Client und Server auch mit 
unterschiedlichen Technologien implementiert werden k&ouml;nnen. Allerdings gibt 
es hierbei folgende Einschr&auml;nkungen:</p>

<ul>
  <li>Der Server kann aufgrund der erforderlichen Anbindung an Spread nur mit 
  Java RMI bzw. RMI-IIOP oder CORBA implementiert werden.</li>
  <li>Der Client kann mit beliebiger Technologie realisiert werden, im Fall von 
  .NET muss allerdings der IIOP.Net Channel (DLL im Package enthalten, 
  Dokumentation siehe unten) verwendet werden und die serverseitige 
  Implementierung mit RMI-IIOP <font color="red">(noch zu testen!)</font> oder 
  CORBA erfolgen.</li>
</ul>
-->
Als Programmiersprache ist Java bzw. C# für .NET vorgesehen.</p>

<p>Die fehlertoleranten Server sollen eine Gruppe bilden und damit über Spread 
miteinander kommunizieren.</p>

<h2>Bewertung</h2>

<p>Die Bewertung basiert auf folgenden Teilen:</p>
<ul>
  <li>30% Ablauf und Interfacespezifikation (Abgabe: Projekt Teil 1)</li>
  <li>30% Server Realisierung</li>
  <li>30% Client Realisierung</li>
  <li>10% Präsentation</li>
</ul>

<p>Es wird dabei jeweils darauf geachtet, inwieweit die obigen Anforderungen 
erfüllt sind.</p>

<p>Sie erhalten nach Projekt Teil 3 pro Gruppe eine Gesamtpunktesumme, die 
sich aus der Gruppenleistung nach obiger Bewertung multipliziert mit der 
Anzahl der Gruppenmitglieder ergibt, z.B. 85 * 6 = 510.  Diese Punktesumme 
können Sie in der Gruppe untereinander verteilen, z.B. 2*95 + 2*85 +  2*75 = 
510.  Diese Verteilung schickt dann der Gruppensprecher an den jeweiligen 
Lektor mit Kopie an alle Gruppenmitglieder. Sollten Sie sich nicht einigen 
können, dann wird die Gesamtsumme zu gleichen Teilen auf die Projektmitglieder 
aufgeteilt.</p>

<p>Sollten Sie beim Abgabetermin keine funktionierende (positive) Lösung 
präsentieren können, verfallen die Präsentationspunkte. Sie 
können dann eine positive Lösung beim jeweiligen Lektor nachbringen, 
wobei dies bereits als 1. Wiederholung des Projekts zählt.</p>

<a name="gruppen">
<h2>Gruppeneinteilung</h2>

<p>Das Projekt wird in <i>sechs</i> Kleingruppen <!--(mit ca. vier bis sechs 
Personen)--> pro Verband abgehalten. Die Gruppeneinteilung erfolgt zu Beginn der 
Lehrveranstaltung nach der ersten Studieneinheit.</p>

<p>Die Gruppeneinteilung zum Projekt ist wie folgt:</p>
</a><ul><a name="gruppen">
  </a><li><a name="gruppen"></a><a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/project/SAM_Projektgruppen_A.html">Gruppeneinteilung Verband A</a></li>
  <li><a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/project/SAM_Projektgruppen_B.html">Gruppeneinteilung Verband B</a></li>
</ul>

<p>Die Technologie wird spätestens beim Projekt Teil 1 festgelegt.</p>

<h2>Aufgaben</h2>

<p>Sollten Sie Fragen oder Probleme beim Lösen der Aufgaben haben, sehen Sie 
bitte zuerst nach, ob diese nicht bereits in den <a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/project/hinweise.html">Hinweisen und FAQs zum Projekt</a> beschrieben sind.</p>

<h3><a name="P1">Projekt - Teil 1</a></h3>

<p>Bis zur ersten Übung bereiten Sie bitte das Design für Ihre Gruppe 
vor, um es in der Übungseinheit präsentieren und diskutieren zu 
können.  Für Präsenation und Diskussion stehen insgesamt ca. 30 
Minuten pro Gruppe zur  Verfügung. Damit sollte eine 
Gruppen-Präsentation insgesamt nicht länger als 20 bis max. 25 Minuten 
dauern.</p>

<p>Konkret soll das Design bzw. die Präsentation folgende Punkte 
beinhalten:</p>

<ol>
  <li>Architektur des Gesamtsystems.</li>
  <li>Spezifikation des Ablaufs zwischen Client und Registrierungsserver zum 
  Starten des Spiels.</li>
  <li>Spezifikation des Ablaufs zwischen Client und Client zum Austausch der 
  Züge inklusive Berücksichtigung von Netzwerkausfällen.</li>
  <li>Spezifikation der Mechanismen um Serverausfälle tolerieren zu können.</li>
  <li>Remote Interface-Definition des Registrierungsservers (inkl. typisierten 
  Methodenparametern).</li>
  <li>Remote Interface-Definition des Game Clients (inkl. typisierten 
  Methodenparametern).</li>
</ol>

<p style="margin-left: 1cm; text-indent: -1cm"><b>Abgabe:</b> Abzugeben ist 
<i>vor</i> dem Präsenztermin eine kurze Ausarbeitung (PDF, DOC, PPT) mit 
der Beschreibung des Designs für Ihre Gruppe als eine ZIP Datei per E-Mail 
an den jeweiligen Lektor.  Die Datei soll dabei nach folgendem Schema benannt 
sein: Gruppenkürzel_NachnameGruppensprecher_Alcatraz_Teil1.ext, also z.B.  
A5_Maier_Alcatraz_Teil1.zip  Es ist ausreichend, die bei der Präsentation 
verwendete Powerpoint-Präsentation abzugeben, sofern diese alle geforderten 
Elemente  enthält.</p>

<p>Weiters geben Sie bitte spätestens zum Zeitpunkt Ihrer Präsentation die von 
Ihrer Gruppe verwendete Technologie bekannt.</p>

<h3><a name="P2">Projekt - Teil 2</a></h3>

<p>Teil zwei dient dem frühzeitigen Feststellen von grundsätzlichen Problemen 
mit dem Umgang der Technologie. Dazu bereiten Sie bitte bis zur zweiten Einheit 
folgende Punkte vor:</p>

<ol>
  <li>Mündlicher Bericht über aktuellen Zwischenstand und eventuelle 
  Probleme.</li>
  <li>Prinzipielle Durchführung einer Remote Method Invocation in der 
  gewählten Technologie.</li>
  <li>Senden und Empfangen von Group Communication Messages mittels Spread.</li>
</ol>

<h3><a name="P3">Projekt - Teil 3</a></h3>
<p>Fertige Implementierung und Vorführung in der Übung.  
Abgabegespräch mit Prüfungscharakter:</p>

<ol>
  <li>Kurzpräsentation des Kerns des Projekt-Designs 
  (Replikationsprotokoll, FT Mechansismen, Startkriterien für den Spielstart) 
  und Zusammensfassung von Änderungen gegenüber dem 
  ursprünglichen Design.</li>
  <li>Vorführung der Implementierung.</li>
  <li>Erklärung spezifischer Mechanismen und Codeteile.</li>
</ol>

<p style="margin-left: 1cm; text-indent: -1cm"><b>Abgabe:</b> Schicken Sie Ihre 
Abgabe bitte <i>vor</i> dem Präsenztermin als eine ZIP Datei per E-Mail an 
den jeweiligen Lektor.  Die Datei soll dabei nach folgendem Schema benannt sein: 
Gruppenkürzel_NachnameGruppensprecher_Alcatraz_Final.zip, also z.B.  
A5_Maier_Alcatraz_Final.zip</p>


<h2>Downloads - Alcatraz</h2>

<h3>Java und CORBA</h3>

<p>Die ZIP-Datei <a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/project/download/alcatraz-java.zip">alcatraz-java.zip</a> 
beinhaltet folgende Dateien:</p>
<ul>
  <li><code>alcatraz-lib.jar</code> beinhaltet die komplette Spielelogik und das 
  graphische User Interface.</li>
  <li><code>alcatraz-doc.zip</code> beinhaltet die Schnittstellendokumentation 
  zum Spiel. Die API Dokumentation finden Sie auch <a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/project/api/index.html" target="_blank">online</a></li>
  <li><code>alcatraz-local-demo-src.zip</code> beinhaltet den Quellcode einer 
  lokalen Demoanwendung,  die den Gebrauch der Schnittstelle illustriert.</li>
  <li><code>alcatraz-local-demo.jar</code> beinhaltet die ausführbare lokale 
  Demoanwendung.</li>
  <li><code>alcatraz-local-demo.bat</code> dient zum Starten der 
  Demoanwendung.</li>
</ul>

<h3>.NET</h3>

<p>Die ZIP Datei <a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/project/download/alcatraz-dotnet.zip">alcatraz-dotnet.zip</a> 
enthält folgende Dateien:</p>
<ul>
  <li><code>Alcatraz.dll</code> mit der Implementierung der Spielelogik und dem  
  graphischen User Interface.</li>
  <li><code>AlcatrazLib_API_doc.zip</code> enthält die zugehörige   
  Schnittstellendokumentation als CHM-Datei und <a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/project/alcatraz-net-api/Index.html">HTML-Seiten</a>.</li>
  <li><code>Test.cs</code> ist eine lokalen Demo-Anwendung, welche die 
  Verwendung der Schnittstelle illustriert.</li>
  <li><code>AlcatrazLocalDemo.exe</code> ist die ausführbare lokale Demo 
  Anwendung.</li>
</ul>

<h3>Spread</h3>

<p>Um das Group Communication Toolkit <a href="http://www.spread.org/" target="_blank">Spread</a> zu verwenden, benötigen Sie:</p>
<ul>
  <li>die <a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/download/spread/spread-bin-4.0.0.tar.gz">compilierte 
    Version von Spread</a> und je nach Platform entweder die</li>
  <li><a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/project/download/spread-4.0.0-api.jar">Java API</a> mit entsprechender <a href="http://www.spread.org/docs/javadocs/java.html" target="_blank">API 
    Dokumentation</a> oder die</li>
  <li><a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/project/download/cspread.zip">.NET API</a> mit entsprechender <a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/project/download/spread_api_doc.zip">API Dokumentation</a>, die Sie <a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/project/spread-net-api/Index.html">hier auch online</a> finden.<br>
  Da die .NET API der Java API sehr ähnlich ist, eignet sich als Unterstützung 
  auch die <a href="http://www.spread.org/docs/javadocs/java.html" target="_blank">Einführung in die Java API</a>.</li>
</ul>

<p>Sowohl für Java als auch für C# sind die Sourcen verfügbar (<a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/project/download/spread-src-4.0.0.tar.gz">Spread Sourcen inklusive Java</a>, 
<a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/project/download/cspread-src.zip">C# Implementierung</a>)
und anhand von <code>User.java</code> bzw. <code>User.cs</code> kann die 
Verwendung der jeweiligen API nachvollzogen werden.</p>

<h2>Online Dokumentation</h2>

<ul>
  <li><a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/project/hinweise.html">Hinweise und FAQs zum Projekt</a></li>
  <li><a href="http://java.sun.com/reference/api/index.html" target="_blank">Java API</a></li>
  <li><a href="http://java.sun.com/docs/books/tutorial" target="_blank">Java 
    Tutorial</a> mit <a href="http://java.sun.com/docs/books/tutorial/rmi/index.html" target="_blank">Spezialteil für Java RMI</a></li>
  <li><a href="http://msdn.microsoft.com/" target="_blank">Microsoft Developer 
    Network</a></li>
  <li><a href="https://cis.technikum-wien.at/documents/bic/4/sam/semesterplan/download/spread/users_guide.pdf">Spread Users Guide</a> und <a href="http://www.spread.org/docs/javadocs/java.html" target="_blank">Spread 
    Java API</a></li>
</ul>
  <br><br><br>





</body></html>
<!--
vim:spelllang=de:fileencoding=latin1
-->