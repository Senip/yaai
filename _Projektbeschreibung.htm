<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>SAM: Projekt &ndash; Softwarearchitekturen und 
  Middlewaretechnologien</title>

</head>

<body bgcolor="#FFFFFF" text="#000000">

  <p>(Stand: 01.03.2012)</p>

  <h2>Projektbeschreibung</h2>

<p>Das Ziel des Projekts ist der Entwurf einer Architektur f&uuml;r ein Verteiltes 
System und die Einarbeitung in Middleware-Technologien f&uuml;r verteilte 
Systeme. Zu diesem Zweck ist ein verteiltes Spiel zu realisieren, an dem bis zu 
vier Spieler teilnehmen k&ouml;nnen. Das User Interface des Spiels und die 
Spielelogik werden zur Verf&uuml;gung gestellt.  Implementiert werden muss ein 
koordinierter Start des Spiels &uuml;ber eine fehlertolerante 
Registrierungsserver-Architektur.  Weiters m&uuml;ssen nach dem Start des Spiels 
die Spielz&uuml;ge der einzelnen Spieler untereinander ausgetauscht werden.</p>

<h2>Alcatraz - Spielbeschreibung</h2>

<p>Ziel des Spiels ist mit seinen vier Gefangenen von der Gefangeneninsel 
Alcatraz (unterer Rand des Spielfeldes) in ein Boot (oberer Rand
des Spielfeldes) zu entkommen. Dazu kann jeder Spieler reihum mit einem 
beliebigen Gefangenen entweder horizontal oder vertikal auf ein freies Feld 
ziehen, solange man nicht von einem W&auml;rter gefangen wird. Bei jedem Zug 
zieht auch der W&auml;rter, der sich in der Zeile des Feldes befindet, auf das 
der Gefangene gezogen ist. Dabei f&auml;hrt der W&auml;rter dieselbe Anzahl an 
Feldern, die auch der Gefangene gefahren ist,
in die Richtung des Gefangenen. Alle Gefangenen, die sich im Wege befinden, 
werden geschlagen und m&uuml;ssen erneut von unten beginnen. W&auml;rter
k&ouml;nnen immer nur horizontal in Ihrer Reihe ziehen. Ein Gefangener darf nicht auf 
ein Feld ziehen, an dem er sich selbst schlagen w&uuml;rde.
Befindet sich ein Gefangener im roten dreieckigen Bereich, so darf er im 
n&auml;chsten Zug in das Boot steigen. Der erste Spieler, welcher alle
seine Gefangenen ins Boot bekommt, hat gewonnen.
</p>


<h2>Anforderungen</h2>

<p>Die &Uuml;bung teilt sich in eine Server- und Client-Implementierung auf. F&uuml;r den 
<b>Registrierungs-Server</b> ergeben sich folgende Aufgaben:

<ul>
  <li>Entwerfen und implementieren Sie auf Basis der theoretischen Grundlagen 
  der Lehrveranstaltung bzw. auch der Grundlagen aus Verteilte Systeme ein 
  ausfallsicheres Serversystem zur Realisierung eines koordinierten Spielstarts 
  (Registrierungsserver).</li>
  <li>Das Registrieren bzw. Starten von Spielen soll m&ouml;glich sein, sobald 
  bzw. solange mindestens ein Registrierungsserver l&auml;uft.</li>
  <li>Wenn sich ein Spieler f&uuml;r ein Spiel registriert hat, soll er sich auch 
  wieder abmelden k&ouml;nnen, sofern das Spiel nicht bereits gestartet wurde.</li>
  <li>Der Ausfall eines Servers darf nicht zum Verlust bzw. Abbruch von 
  laufenden Spielregistrierungen f&uuml;hren.</li>
  <li>Um die Server im laufenden Betrieb miteinander zu synchronisieren, ist die 
  Verwendung von Spread vorgesehen.</li>
  <li>Achten Sie darauf, dass Sie in Ihrer Architektur keinen 
  Single-Point-of-Failure haben.</li>
</ul>

<p>Der <b>Spiele-Client</b> ist durch folgende Anforderungen spezifiziert:</p>

<ul>
  <li>Der Client muss in Interaktion mit dem Server einen koordinierten 
  Spielstart durchf&uuml;hren. Ein Spiel muss mit 2, 3 oder 4 Spielern spielbar 
  sein.</li>
  <li>Es muss m&ouml;glich sein, dass die Spielernamen ausgetauscht werden 
  k&ouml;nnen, damit jeder Spieler die anderen kennt. Ein Spielername muss 
  innerhalb eines Spieles eindeutig sein.</li>
  <li>W&auml;hrend eines Spiels sollen die Spielz&uuml;ge direkt zwischen den 
  Spiel-Clients ausgetauscht werden. Der Server darf im Spiel nicht mehr 
  involviert sein.</li>
  <li>Eine kurze Netzwerkunterbrechung (z.B. durch Ziehen des Netzwerkkabels) 
  darf nicht zu inkorrektem Verhalten oder Absturz bzw. Deadlock des Spiels 
  f&uuml;hren.  Nach Wiederherstellung der Verbindung soll weitergespielt 
  werden k&ouml;nnen.</li>
  <li>Zur Kommunikation zwischen Client und Registrierungsserver bzw. zwischen 
  den Clients untereinander ist eine RMI Technologie zu verwenden.</li>
</ul>

<h2>Technologien</h2>

<p>Zur Realisierung der &Uuml;bungsaufgabe kann Java RMI, CORBA, .NET Remoting 
oder .NET WCF verwendet werden.<!--, wobei Client und Server auch mit 
unterschiedlichen Technologien implementiert werden k&ouml;nnen. Allerdings gibt 
es hierbei folgende Einschr&auml;nkungen:</p>

<ul>
  <li>Der Server kann aufgrund der erforderlichen Anbindung an Spread nur mit 
  Java RMI bzw. RMI-IIOP oder CORBA implementiert werden.</li>
  <li>Der Client kann mit beliebiger Technologie realisiert werden, im Fall von 
  .NET muss allerdings der IIOP.Net Channel (DLL im Package enthalten, 
  Dokumentation siehe unten) verwendet werden und die serverseitige 
  Implementierung mit RMI-IIOP <font color="red">(noch zu testen!)</font> oder 
  CORBA erfolgen.</li>
</ul>
-->
Als Programmiersprache ist Java bzw. C# f&uuml;r .NET vorgesehen.</p>

<p>Die fehlertoleranten Server sollen eine Gruppe bilden und damit &uuml;ber Spread 
miteinander kommunizieren.</p>

<h2>Bewertung</h2>

<p>Die Bewertung basiert auf folgenden Teilen:</p>
<ul>
  <li>30% Ablauf und Interfacespezifikation (Abgabe: Projekt Teil 1)</li>
  <li>30% Server Realisierung</li>
  <li>30% Client Realisierung</li>
  <li>10% Pr&auml;sentation</li>
</ul>

<p>Es wird dabei jeweils darauf geachtet, inwieweit die obigen Anforderungen 
erf&uuml;llt sind.</p>

<p>Sie erhalten nach Projekt Teil 3 pro Gruppe eine Gesamtpunktesumme, die 
sich aus der Gruppenleistung nach obiger Bewertung multipliziert mit der 
Anzahl der Gruppenmitglieder ergibt, z.B. 85 * 6 = 510.  Diese Punktesumme 
k&ouml;nnen Sie in der Gruppe untereinander verteilen, z.B. 2*95 + 2*85 +  2*75 = 
510.  Diese Verteilung schickt dann der Gruppensprecher an den jeweiligen 
Lektor mit Kopie an alle Gruppenmitglieder. Sollten Sie sich nicht einigen 
k&ouml;nnen, dann wird die Gesamtsumme zu gleichen Teilen auf die Projektmitglieder 
aufgeteilt.</p>

<p>Sollten Sie beim Abgabetermin keine funktionierende (positive) L&ouml;sung 
pr&auml;sentieren k&ouml;nnen, verfallen die Pr&auml;sentationspunkte. Sie 
k&ouml;nnen dann eine positive L&ouml;sung beim jeweiligen Lektor nachbringen, 
wobei dies bereits als 1. Wiederholung des Projekts z&auml;hlt.</p>

<a name="gruppen"/>
<h2>Gruppeneinteilung</h2>

<p>Das Projekt wird in <i>sechs</i> Kleingruppen <!--(mit ca. vier bis sechs 
Personen)--> pro Verband abgehalten. Die Gruppeneinteilung erfolgt zu Beginn der 
Lehrveranstaltung nach der ersten Studieneinheit.</p>

<p>Die Gruppeneinteilung zum Projekt ist wie folgt:</p>
<ul>
  <li><a href="SAM_Projektgruppen_A.html">Gruppeneinteilung Verband A</a></li>
  <li><a href="SAM_Projektgruppen_B.html">Gruppeneinteilung Verband B</a></li>
</ul>

<p>Die Technologie wird sp&auml;testens beim Projekt Teil 1 festgelegt.</p>

<h2>Aufgaben</h2>

<p>Sollten Sie Fragen oder Probleme beim L&ouml;sen der Aufgaben haben, sehen Sie 
bitte zuerst nach, ob diese nicht bereits in den <a 
  href="hinweise.html">Hinweisen und FAQs zum Projekt</a> beschrieben sind.</p>

<h3><a name="P1">Projekt - Teil 1</a></h3>

<p>Bis zur ersten &Uuml;bung bereiten Sie bitte das Design f&uuml;r Ihre Gruppe 
vor, um es in der &Uuml;bungseinheit pr&auml;sentieren und diskutieren zu 
k&ouml;nnen.  F&uuml;r Pr&auml;senation und Diskussion stehen insgesamt ca. 30 
Minuten pro Gruppe zur  Verf&uuml;gung. Damit sollte eine 
Gruppen-Pr&auml;sentation insgesamt nicht l&auml;nger als 20 bis max. 25 Minuten 
dauern.</p>

<p>Konkret soll das Design bzw. die Pr&auml;sentation folgende Punkte 
beinhalten:</p>

<ol>
  <li>Architektur des Gesamtsystems.</li>
  <li>Spezifikation des Ablaufs zwischen Client und Registrierungsserver zum 
  Starten des Spiels.</li>
  <li>Spezifikation des Ablaufs zwischen Client und Client zum Austausch der 
  Z&uuml;ge inklusive Ber&uuml;cksichtigung von Netzwerkausf&auml;llen.</li>
  <li>Spezifikation der Mechanismen um Serverausf&auml;lle tolerieren zu k&ouml;nnen.</li>
  <li>Remote Interface-Definition des Registrierungsservers (inkl. typisierten 
  Methodenparametern).</li>
  <li>Remote Interface-Definition des Game Clients (inkl. typisierten 
  Methodenparametern).</li>
</ol>

<p style="margin-left: 1cm; text-indent: -1cm"><b>Abgabe:</b> Abzugeben ist 
<i>vor</i> dem Pr&auml;senztermin eine kurze Ausarbeitung (PDF, DOC, PPT) mit 
der Beschreibung des Designs f&uuml;r Ihre Gruppe als eine ZIP Datei per E-Mail 
an den jeweiligen Lektor.  Die Datei soll dabei nach folgendem Schema benannt 
sein: Gruppenk&uuml;rzel_NachnameGruppensprecher_Alcatraz_Teil1.ext, also z.B.  
A5_Maier_Alcatraz_Teil1.zip  Es ist ausreichend, die bei der Pr&auml;sentation 
verwendete Powerpoint-Pr&auml;sentation abzugeben, sofern diese alle geforderten 
Elemente  enth&auml;lt.</p>

<p>Weiters geben Sie bitte sp&auml;testens zum Zeitpunkt Ihrer Pr&auml;sentation die von 
Ihrer Gruppe verwendete Technologie bekannt.</p>

<h3><a name="P2">Projekt - Teil 2</a></h3>

<p>Teil zwei dient dem fr&uuml;hzeitigen Feststellen von grunds&auml;tzlichen Problemen 
mit dem Umgang der Technologie. Dazu bereiten Sie bitte bis zur zweiten Einheit 
folgende Punkte vor:</p>

<ol>
  <li>M&uuml;ndlicher Bericht &uuml;ber aktuellen Zwischenstand und eventuelle 
  Probleme.</li>
  <li>Prinzipielle Durchf&uuml;hrung einer Remote Method Invocation in der 
  gew&auml;hlten Technologie.</li>
  <li>Senden und Empfangen von Group Communication Messages mittels Spread.</li>
</ol>

<h3><a name="P3">Projekt - Teil 3</a></h3>
<p>Fertige Implementierung und Vorf&uuml;hrung in der &Uuml;bung.  
Abgabegespr&auml;ch mit Pr&uuml;fungscharakter:</p>

<ol>
  <li>Pr&auml;sentation des Projekt-Designs.</li>
  <li>Vorf&uuml;hrung der Implementierung.</li>
  <li>Erkl&auml;rung spezifischer Mechanismen und Codeteile.</li>
</ol>

<p style="margin-left: 1cm; text-indent: -1cm"><b>Abgabe:</b> Schicken Sie Ihre 
Abgabe bitte <i>vor</i> dem Pr&auml;senztermin als eine ZIP Datei per E-Mail an 
den jeweiligen Lektor.  Die Datei soll dabei nach folgendem Schema benannt sein: 
Gruppenk&uuml;rzel_NachnameGruppensprecher_Alcatraz_Final.zip, also z.B.  
A5_Maier_Alcatraz_Final.zip</p>


<h2>Downloads - Alcatraz</h2>

<h3>Java und CORBA</h3>

<p>Die ZIP-Datei <a href="download/alcatraz-java.zip">alcatraz-java.zip</a> 
beinhaltet folgende Dateien:</p>
<ul>
  <li><code>alcatraz-lib.jar</code> beinhaltet die komplette Spielelogik und das 
  graphische User Interface.</li>
  <li><code>alcatraz-doc.zip</code> beinhaltet die Schnittstellendokumentation 
  zum Spiel. Die API Dokumentation finden Sie auch <a href="api/index.html" 
    target="_blank">online</a></li>
  <li><code>alcatraz-local-demo-src.zip</code> beinhaltet den Quellcode einer 
  lokalen Demoanwendung,  die den Gebrauch der Schnittstelle illustriert.</li>
  <li><code>alcatraz-local-demo.jar</code> beinhaltet die ausf&uuml;hrbare lokale 
  Demoanwendung.</li>
  <li><code>alcatraz-local-demo.bat</code> dient zum Starten der 
  Demoanwendung.</li>
</ul>

<h3>.NET</h3>

<p>Die ZIP Datei <a href="download/alcatraz-dotnet.zip">alcatraz-dotnet.zip</a> 
enth&auml;lt folgende Dateien:</p>
<ul>
  <li><code>Alcatraz.dll</code> mit der Implementierung der Spielelogik und dem  
  graphischen User Interface.</li>
  <li><code>AlcatrazLib_API_doc.zip</code> enth&auml;lt die zugeh&ouml;rige   
  Schnittstellendokumentation als CHM-Datei und <a 
    href="alcatraz-net-api/Index.html">HTML-Seiten</a>.</li>
  <li><code>Test.cs</code> ist eine lokalen Demo-Anwendung, welche die 
  Verwendung der Schnittstelle illustriert.</li>
  <li><code>AlcatrazLocalDemo.exe</code> ist die ausf&uuml;hrbare lokale Demo 
  Anwendung.</li>
</ul>

<h3>Spread</h3>

<p>Um das Group Communication Toolkit <a href="http://www.spread.org/" 
  target="_blank">Spread</a> zu verwenden, ben&ouml;tigen Sie:</p>
<ul>
  <li>die <a href="../download/spread/spread-bin-4.0.0.tar.gz">compilierte 
    Version von Spread</a> und je nach Platform entweder die</li>
  <li><a href="download/spread-4.0.0-api.jar">Java API</a> mit entsprechender <a 
    href="http://www.spread.org/docs/javadocs/java.html" target="_blank">API 
    Dokumentation</a> oder die</li>
  <li><a href="download/cspread.zip">.NET API</a> mit entsprechender <a 
    href="download/spread_api_doc.zip">API Dokumentation</a>, die Sie <a 
    href="spread-net-api/Index.html">hier auch online</a> finden.<br />
  Da die .NET API der Java API sehr &auml;hnlich ist, eignet sich als Unterst&uuml;tzung 
  auch die <a href="http://www.spread.org/docs/javadocs/java.html" 
    target="_blank">Einf&uuml;hrung in die Java API</a>.</li>
</ul>

<p>Sowohl f&uuml;r Java als auch f&uuml;r C# sind die Sourcen verf&uuml;gbar (<a 
  href="download/spread-src-4.0.0.tar.gz">Spread Sourcen inklusive Java</a>, 
<a href="download/cspread-src.zip">C# Implementierung</a>)
und anhand von <code>User.java</code> bzw. <code>User.cs</code> kann die 
Verwendung der jeweiligen API nachvollzogen werden.</p>

<h2>Online Dokumentation</h2>

<ul>
  <li><a href="hinweise.html">Hinweise und FAQs zum Projekt</a></li>
  <li><a href="http://java.sun.com/reference/api/index.html" 
    target="_blank">Java API</a></li>
  <li><a href="http://java.sun.com/docs/books/tutorial" target="_blank">Java 
    Tutorial</a> mit <a 
    href="http://java.sun.com/docs/books/tutorial/rmi/index.html" 
    target="_blank">Spezialteil f&uuml;r Java RMI</a></li>
  <li><a href="http://msdn.microsoft.com/" target="_blank">Microsoft Developer 
    Network</a></li>
  <li><a href="../download/spread/users_guide.pdf">Spread Users Guide</a> und <a 
    href="http://www.spread.org/docs/javadocs/java.html" target="_blank">Spread 
    Java API</a></li>
</ul>
  <br /><br /><br />

</body>
</html>

<!--
vim:spelllang=de
-->
